- rule: '''users.*.name = "lnd"'
  description: 'Must have an RPC user named "lnd"'
  suggestions:
    - PUSH:
        to: "users"
        value:
          name: lnd
          allowed-calls: []
    - SET:
        var: 'users.[first(item => ''item.name = "lnd")].password'
        to-entropy:
          charset: "a-z,A-Z,0-9"
          len: 22
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getinfo"'
  description: 'RPC user "lnd" must have "getinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getinfo"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getbestblockhash"'
  description: 'RPC user "lnd" must have "getbestblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getbestblockhash"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "gettxout"'
  description: 'RPC user "lnd" must have "gettxout" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "gettxout"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getblockchaininfo"'
  description: 'RPC user "lnd" must have "getblockchaininfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getblockchaininfo"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "sendrawtransaction"'
  description: 'RPC user "lnd" must have "sendrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "sendrawtransaction"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getblockhash"'
  description: 'RPC user "lnd" must have "getblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getblockhash"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getblock"'
  description: 'RPC user "lnd" must have "getblock" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getblock"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getblockheader"'
  description: 'RPC user "lnd" must have "getblockheader" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getblockheader"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "estimatesmartfee"'
  description: 'RPC user "lnd" must have "estimatesmartfee" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "estimatesmartfee"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getnetworkinfo"'
  description: 'RPC user "lnd" must have "getnetworkinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getnetworkinfo"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "uptime"'
  description: 'RPC user "lnd" must have "uptime" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "uptime"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getrawtransaction"'
  description: 'RPC user "lnd" must have "getrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getrawtransaction"
- rule: '''users.[first(item => ''item.name = "lnd")].allowed-calls.* = "getpeerinfo"'
  description: 'RPC user "lnd" must have "getpeerinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "lnd")].allowed-calls'
        value: "getpeerinfo"
- rule: 'users.[first(item => ''item.name = "lnd")].fetch-blocks?'
  description: 'RPC user "lnd" must have "Fetch Blocks" enabled'
  suggestions:
    - SET:
        var: 'users.[first(item => ''item.name = "lnd")].fetch-blocks'
        to-value: true